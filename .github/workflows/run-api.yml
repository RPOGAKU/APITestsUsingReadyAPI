name: Run ReadyAPI Tests

on:
  workflow_dispatch:

permissions:
  checks: write
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create reports directory
        run: |
          mkdir -p ${{ github.workspace }}/reports
          chmod 777 ${{ github.workspace }}/reports

      - name: Run ReadyAPI tests and generate HTML report
        run: |
          echo "SLM_LICENSE_SERVER=${{ secrets.SLM_LICENSE_SERVER }}" > .env
          echo "API_KEY=${{ secrets.SLM_API_KEY }}" >> .env
          echo "COMMAND_LINE=-Esandbox -sTestSuite '-RJUnit-Style HTML Report' -FHTML -f/project/reports /project/DemoAppProject.xml" >> .env

          docker pull smartbear/ready-api-soapui-testrunner
          docker run --env-file .env -v "${{ github.workspace }}:/project" smartbear/ready-api-soapui-testrunner
          
      - name: List contents of reports directory
        run: ls -la reports

      - name: Install PyMuPDF
        run: pip install pymupdf

      - name: Parse HTML Report and Generate Summary
        run: |
          pip install beautifulsoup4
          python3 - <<EOF
          import os
          from bs4 import BeautifulSoup
      
          reports_dir = "reports"
          html_file = None
      
          for file in os.listdir(reports_dir):
              if file.lower().endswith(".html"):
                  html_file = os.path.join(reports_dir, file)
                  break
      
          if not html_file:
              raise FileNotFoundError("No HTML report found in the 'reports' directory.")
      
          with open(html_file, "r", encoding="utf-8") as f:
              soup = BeautifulSoup(f, "html.parser")
      
          summary_lines = []
          summary_lines.append("## ðŸ§ª ReadyAPI Test Summary (from HTML Report)\\n")
          summary_lines.append("| Scenario | Step | Status |")
          summary_lines.append("|----------|------|--------|")
      
          rows = soup.find_all("tr")
          for row in rows:
              cols = row.find_all("td")
              if len(cols) >= 3:
                  name = cols[0].get_text(strip=True)
                  status = cols[1].get_text(strip=True).upper()
                  time = cols[2].get_text(strip=True)
      
                  if name.startswith("Scenario:") and "|" in name:
                      parts = name.split("|", 1)
                      scenario = parts[0].replace("Scenario:", "").strip()
                      step = parts[1].strip()
                  else:
                      scenario = "Unknown"
                      step = name
      
                  summary_lines.append(f"| {scenario} | {step} | {status} |")
      
          with open(os.environ['GITHUB_STEP_SUMMARY'], "w") as f:
              f.write("\\n".join(summary_lines))
          EOF

          - name: Upload HTML Report Artifact
          Â  uses: actions/upload-artifact@v4
          Â  with:
          Â Â Â  name: readyapi-html-report
          Â Â Â  path: reports/*.html
