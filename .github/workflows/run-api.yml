name: Run ReadyAPI Tests

on:
  workflow_dispatch:

permissions:
  checks: write
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create reports directory
        run: |
          mkdir -p ${{ github.workspace }}/reports
          chmod 777 ${{ github.workspace }}/reports

      - name: Run ReadyAPI tests and generate JUnit report
        run: |
          echo "SLM_LICENSE_SERVER=${{ secrets.SLM_LICENSE_SERVER }}" > .env
          echo "API_KEY=${{ secrets.SLM_API_KEY }}" >> .env
          echo "COMMAND_LINE=-Esandbox -sTestSuite -RJUnit -j -f/project/reports /project/DemoAppProject.xml" >> .env

          docker pull smartbear/ready-api-soapui-testrunner
          docker run --env-file .env -v "${{ github.workspace }}:/project" smartbear/ready-api-soapui-testrunner

      - name: Debug - List XML files
        run: ls -l reports/*.xml
      
      - name: Convert JUnit XML to HTML
        run: |
          pip install --user junit2html
          junit2html reports/TEST-TestSuite.xml reports/report.html

      - name: Parse HTML Report and Display Summary
        run: |
          pip install beautifulsoup4
          python3 - <<EOF
          import os
          from bs4 import BeautifulSoup
      
          html_file = "reports/report.html"
          if not os.path.exists(html_file):
              raise FileNotFoundError("HTML report not found.")
      
          with open(html_file, "r", encoding="utf-8") as f:
              soup = BeautifulSoup(f, "html.parser")
      
          summary_lines = []
          summary_lines.append("## ðŸ§ª ReadyAPI Test Summary (from JUnit HTML Report)\n")
          summary_lines.append("| Test Case | Status | Duration |")
          summary_lines.append("|-----------|--------|----------|")
      
          for test_div in soup.find_all("div", class_="test"):
              table = test_div.find("table", class_="proplist")
              if not table:
                  continue
      
              rows = table.find_all("tr")
              test_case = status = duration = "N/A"
      
              for row in rows:
                  header = row.find("th").get_text(strip=True)
                  value = row.find("td").get_text(strip=True)
      
                  if "Test case" in header:
                      test_case = value
                  elif "Outcome" in header:
                      status = value
                  elif "Duration" in header:
                      duration = value
      
              summary_lines.append(f"| {test_case} | {status} | {duration} |")
      
          summary = "\n".join(summary_lines)
          print(summary)
      
          with open(os.environ['GITHUB_STEP_SUMMARY'], "w") as f:
              f.write(summary)
          EOF

      - name: Upload HTML Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: readyapi-html-report
          path: reports/report.html
