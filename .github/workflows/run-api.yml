name: Run ReadyAPI Tests

on:
  workflow_dispatch:
    inputs:
      projectFile:
        description: 'Path to ReadyAPI project file'
        required: true
        default: 'DemoAppProject.xml'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run ReadyAPI tests and generate JUnit reports
        run: |
          echo "SLM_LICENSE_SERVER=${{ secrets.SLM_LICENSE_SERVER }}" > .env
          echo "API_KEY=${{ secrets.SLM_API_KEY }}" >> .env
          echo "COMMAND_LINE=-Esandbox -sTestSuite -RJUnit -j -f/project/reports /project//${{ github.event.inputs.projectFile }}" >> .env

          docker pull smartbear/ready-api-soapui-testrunner
          docker run --env-file .env -v "${{ github.workspace }}:/project" smartbear/ready-api-soapui-testrunner

      - name: Debug - List XML files
        run: ls -l reports/*.xml

      - name: Parse XML Reports and Display Summary
        run: |
          pip install beautifulsoup4
          python3 - <<EOF
          import os
          import xml.etree.ElementTree as ET
          import re
          from html import unescape
          from bs4 import BeautifulSoup

          summary_lines = []
          summary_lines.append("## üß™ ReadyAPI Test Summary\n")

          # --- Parse report.xml ---
          report_path = "reports/report.xml"
          if os.path.exists(report_path):
              summary_lines.append("### üìÑ JUnit Report Summary (report.xml)")
              summary_lines.append("| Test Case | Status | Duration |")
              summary_lines.append("|-----------|--------|----------|")
              tree = ET.parse(report_path)
              root = tree.getroot()
              for testcase in root.findall(".//testcase"):
                  name = testcase.attrib.get("name", "N/A")
                  time = testcase.attrib.get("time", "N/A")
                  status = "Passed"
                  if testcase.find("failure") is not None:
                      status = "Failed"
                  elif testcase.find("error") is not None:
                      status = "Error"
                  summary_lines.append(f"| {name} | {status} | {time} |")
          else:
              summary_lines.append("‚ùå `report.xml` not found.\n")

          # --- Parse TEST-TestSuite.xml ---
          test_suite_path = "reports/TEST-TestSuite.xml"
          if os.path.exists(test_suite_path):
              summary_lines.append("\n### üßæ Detailed Step Summary (TEST-TestSuite.xml)")
              summary_lines.append("| Test Case | Step Name | Status | Info |")
              summary_lines.append("|-----------|-----------|--------|------|")
              tree = ET.parse(test_suite_path)
              root = tree.getroot()
              for testcase in root.findall(".//testcase"):
                  test_case_name = testcase.attrib.get("name", "N/A")
                  success = testcase.find("success")
                  if success is not None and success.text:
                      cdata_content = unescape(success.text)
                      steps = re.findall(r"<h3><b>(.*?)</b></h3>\\s*<pre>(.*?)</pre>", cdata_content, re.DOTALL)
                      for step in steps:
                          step_info = step[0]
                          info = step[1].strip()
                          if " " in step_info:
                              step_name, status = step_info.rsplit(" ", 1)
                          else:
                              step_name, status = step_info, "N/A"
                          summary_lines.append(f"| {test_case_name} | {step_name} | {status} | {info} |")
          else:
              summary_lines.append("‚ùå `TEST-TestSuite.xml` not found.\n")

          # Write to GitHub summary
          summary = "\\n".join(summary_lines)
          print(summary)
          with open(os.environ['GITHUB_STEP_SUMMARY'], "w") as f:
              f.write(summary)
          EOF

      - name: Upload All XML Reports
        uses: actions/upload-artifact@v4
        with:
          name: readyapi-xml-reports
          path: reports/*.xml
